swagger: "2.0"
info:
  version: "0.0.1"
  title: Images Bank API
# basePath prefixes all resource paths 
basePath: /api
tags:
  - name: Admin
    description: Administration fonctions
  - name: Image
    description: Images management functions
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    x-swagger-router-controller: users
    post:
      tags:
        - Admin
      description: Create a new user
      operationId: createUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: user
          in: body
          description: The user to create
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        "201":
          description: Created
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Admin
      description: Return the list of users
      operationId: listUsers
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Users"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userid}:
    x-swagger-router-controller: users
    get:
      tags:
        - Admin
      description: Retreive the user information
      operationId: getUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Admin
      description: Update the given user
      operationId: updateUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
        - name: user
          in: body
          description: The new user data
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Admin
      description: Delete the given user
      operationId: deleteUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /collections:
    x-swagger-router-controller: images
    get:
      tags:
        - Image
      description: List existing collections
      operationId: listCollections
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
      responses:
        "200":
          description: Collections list
          schema:
            type: array
            items:
              type: string
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /collections/{collection}:
    x-swagger-router-controller: images
    delete:
      tags:
        - Image
      description: Delete a collection and its images
      operationId: deleteCollection
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
        - name: collection
          in: path
          description: The collection to upload the image in
          required: true
          type: string
      responses:
        "200":
          description: Deleted
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /collections/{collection}/images:
    x-swagger-router-controller: images
    post:
      tags:
        - Image
      description: Upload an image
      operationId: uploadImage
      consumes:
         - multipart/form-data
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
        - name: collection
          in: path
          description: The collection to upload the image in
          required: true
          type: string
        - in: formData
          name: image
          type: file
          required: true
          description: The image to upload.
      responses:
        "201":
          description: Created
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Image"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Image
      description: return the list of images in the collection
      operationId: listImages
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
        - name: collection
          in: path
          description: The collection name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Images"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /collections/{collection}/images/{imageid}:
    x-swagger-router-controller: images
    get:
      tags:
        - Image
      description: download an image
      operationId: downloadImage
      produces:
        - image/jpeg
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
        - name: collection
          in: path
          description: The collection to upload the image in
          required: true
          type: string
        - name: imageid
          in: path
          description: The id of the image to download
          required: true
          type: string
      responses:
        "200":
          description: The image
          schema:
            type: file
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Image
      description: Delete the image
      operationId: deleteImage
      parameters:
        - name: ApiKey
          in: header
          description: The user api-key
          required: true
          type: string
        - name: collection
          in: path
          description: The collection to upload the image in
          required: true
          type: string
        - name: imageid
          in: path
          description: The id of the image to delete
          required: true
          type: string
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Images:
    type: array
    items:
      $ref: "#/definitions/Image"
  Image:
    properties:
      imageid:
        type: string
      length:
        type: integer
      contentType:
        type: string
      filename:
        type: string
      md5:
        type: string
      uploadDate:
        type: string
        format: date-time
  Users:
    type: array
    items:
      $ref: "#/definitions/User"
  UserBase:
    properties:
      name:
        type: string
  User:
    allOf:
      - $ref: "#/definitions/UserBase"
      - properties:
          userid:
            type: string
          apikey:
            type: string
  UserCreate:
    required:
      - name
    allOf:
      - $ref: "#/definitions/UserBase"
  UserUpdate:
    allOf:
      - $ref: "#/definitions/UserBase"
      - properties:
          apikey:
            type: string
  ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
